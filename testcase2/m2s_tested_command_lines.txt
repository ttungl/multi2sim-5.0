
[02/14/17]
	--condor
	$ ps aux | grep condor
		tungle    7766  0.0  0.0  15944  2176 pts/27   S+   23:05   0:00 grep --color=auto condor
	error: 
		ERROR: Can't find address of local schedd


[02/09/17] 
	--
	F11: full-screen ubuntu.
	--
	./benchmarks/m2s-bench-splash2/ocean/ocean.i386 -n130 -p16 -e1e-07 -r20000 -t28800


[02/08/17]
	-- 
	benchmarks/rodinia_3.1/NVIDIA_CUDA-8.0_Samples/2_Graphics/marchingCubes/marchingCubes
	benchmarks/m2s-bench-parsec-3.0/blackscholes/blackscholes 8 in_16K.txt prives.txt data-medium
	--
	install gcc-4.8 and g++-4.4 for compiling cuda benchmarks.
		sudo apt-get install gcc-4.4 g++-4.4
		sudo apt-get install g++-4.4-multilib 
		
		example to switch from 4.8 to 4.4
			$ sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 100 --slave /usr/bin/g++ g++ /usr/bin/g++-4.8

			$ sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.4 50 --slave /usr/bin/g++ g++ /usr/bin/g++-4.4 
			
			$ sudo update-alternatives --config gcc
	--



[02/07/17] 
	
	-- run rodinia3.1 benchmark with m2s
	[error#4] -m32 flag
		benchmarks/rodinia_3.1/cuda/backprop/backprop 65536
		--
		; Multi2Sim 5.0 - A Simulation Framework for CPU-GPU Heterogeneous Computing
		; Please use command 'm2s --help' for a list of command-line options.
		; Simulation alpha-numeric ID: 6LbHL

		[ELF Reader]
		[/home/tungle/Documents/multi2sim-5.0/benchmarks/rodinia_3.1/cuda/backprop/backp
		rop] Error: 64-bit ELF files not supported

		The ELF file being loaded is a 64-bit file, currently not supported by
		Multi2Sim. If you are compiling your own source code on a 64-bit machine, please
		use the '-m32' flag in the gcc command-line. If you get compilation errors
		related with missing '.h' files, check that the 32-bit gcc package associated
		with your Linux distribution is installed.
		--	
		solution [attempting (not solved yet)]:
			export CFLAGS=-m32 CXXFLAGS=-m32 LDFLAGS=-m32 



	-- compiled Rodinia_3.1, a list of benchmarks has been successfully compiled, and how to run the benchmarks.
		hotspot
			run file
			////////////////
			./hotspot 512 2 2 ../../data/hotspot/temp_512 ../../data/hotspot/power_512 output.out

		hotspot3D
			run file
			////////////////
			./3D 512 8 100 ../../data/hotspot3D/power_512x8 ../../data/hotspot3D/temp_512x8 output.out

		backprop
			run file
			////////////////
			./backprop 65536
		
		kmeans
			run file
			////////////////
			./kmeans -o -i ../../data/kmeans/kdd_cup
		
		particlefilter
			./particlefilter_naive -x 128 -y 128 -z 10 -np 1000
			./particlefilter_float -x 128 -y 128 -z 10 -np 1000
		
		bfs
			run file
			////////////////
			./bfs ../../data/bfs/graph1MW_6.txt
		
		dwt2d 
			[the command lines below should be put into a run.sh file]
			--///////
			./dwt2d 192.bmp -d 192x192 -f -5 -l 3
			ls
			./dwt2d rgb.bmp -d 1024x1024 -f -5 -l 3

		lavaMD
			run file
			////////////////
			./lavaMD -boxes1d 10

		pathfinder 
			[need to output as a large data]
			////////////////
			./pathfinder 100000 100 20 > result.txt

		b+tree
			1. compile files
				make KERNEL_DIM="-DRD_WG_SIZE_0=256"
			2. run exe
				./b+tree.out file ../../data/b+tree/mil.txt command ../../data/b+tree/command.txt

		lud_cuda
			1. modified gpu-architecture to sm_20 in lud/cuda/Makefile, and compile files in lud folder by running:
				make KERNEL_DIM="-DRD_WG_SIZE_0=16"
			2. run lud_cuda.exe
				cuda/lud_cuda -s 256 -v

		leukocyte
			run file
			////////////////
			./CUDA/leukocyte  ../../data/leukocyte/testfile.avi 5 

		gaussian
			./gaussian -f ../../data/gaussian/matrix4.txt
			./gaussian -s 16

		huffman
			1. run 'make', not 'sudo make'!, the output is 'pavle'
			2. run file:
				./pavle ../../data/huffman/test1024_H2.206587175259.in 

		cfd
			1. run 'make', not 'sudo make', the outputs are:
				euler3d, euler3d_double, pre_euler3d, pre_euler3d_double
			2. run file
				./euler3d ../../data/cfd/fvcorr.domn.097K   
				./euler3d ../../data/cfd/fvcorr.domn.193K   
				./euler3d ../../data/cfd/missile.domn.0.2M  

		heartwall
			1. run 'make', output: heartwall
			2. run command:
				./heartwall ../../data/heartwall/test.avi 20

		nn
			run file
			////////////////
			./nn filelist_4 -r 5 -lat 30 -lng 90

		srad
			srad_v1
				./a.out 100 0.5 502 458

			srad_v2
				./srad 2048 2048 0 127 0 127 0.5 2

		nw
			run file
			////////////////
			./needle 2048 10

		streamcluster
			run file
			////////////////
			./sc_gpu 10 20 256 65536 65536 1000 none output.txt 1

		myocyte
			1. run 'make', the output is: myocyte.out
			2. run file
				./myocyte.out 100 1 0


	-- Important: set env before running simulation. 
		export PATH=/usr/local/cuda-8.0/bin:$PATH
		export LD_LIBRARY_PATH=/usr/local/cuda-8.0/lib64:$LD_LIBRARY_PATH
		--
		export CUDA_HOME=/usr/local/cuda-8.0
		export LD_LIBRARY_PATH=${CUDA_HOME}/lib64
	--
	[error#3]
		make[1]: Entering directory `/home/tungle/Documents/multi2sim-5.0/benchmarks/rodinia_3.1/cuda/cfd'
		nvcc  -O2 -Xptxas -v --gpu-architecture=compute_20 --gpu-code=compute_20 euler3d.cu -o euler3d -I/usr/local/cuda/samples/common/inc  -L/usr/local/cuda/samples/lib 
		make[1]: nvcc: Command not found
		make[1]: *** [euler3d] Error 127
		make[1]: Leaving directory `/home/tungle/Documents/multi2sim-5.0/benchmarks/rodinia_3.1/cuda/cfd'
		cp: cannot stat ‘euler3d’: No such file or directory
		cp: cannot stat ‘euler3d_double’: No such file or directory
		cp: cannot stat ‘pre_euler3d’: No such file or directory
		cp: cannot stat ‘pre_euler3d_double’: No such file or directory
		make: *** [CUDA] Error 1
	--solution#3: 
		solved.
		use 'make' instead of 'sudo make', do manually inside the benchmark folder.
		


[02/05/17] 

	history > print.txt to print the previous command lines to the file.
	--
	[error#2]
		nvcc fatal   : Value 'sm_13' is not defined for option 'gpu-architecture'
		make[1]: *** [kernel/kernel_gpu_cuda_wrapper.o] Error 1

		--
		nvcc --help
		in gpu-architecture section, the sm* and compute* should be within these scopes:
		'virtual' architecture as effective architecture values.  For example, 'nvcc
        --gpu-architecture=sm_50' is equivalent to 'nvcc --gpu-architecture=compute_50
        --gpu-code=sm_50,compute_50'.
        Allowed values for this option:  'compute_20','compute_30','compute_32',
        'compute_35','compute_37','compute_50','compute_52','compute_53','compute_60',
        'compute_61','compute_62','sm_20','sm_21','sm_30','sm_32','sm_35','sm_37',
        'sm_50','sm_52','sm_53','sm_60','sm_61','sm_62'.


	--Need to declare these before working with nvcc.
	export PATH=/usr/local/cuda/bin:$PATH
	export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
	export CUDA_INSTALL_PATH=/usr/local/cuda/common/inc:$CUDA_INSTALL_PATH
	
	--For rodinia_3.1
	modified the SDK_DIR = /usr/local/cuda/samples/common/inc
	in make.config file, common folder of Rodinia.

	--
	The kernel headers and development packages for the currently running kernel can be installed with:
	$ sudo apt-get install linux-headers-$(uname -r)

	Read more at: http://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#ixzz4Xpn5FmSt 
	Follow us: @GPUComputing on Twitter | NVIDIA on Facebook

	---- installed CUDA driver, toolkit, SDK
	CUDA Device Query (Runtime API) version (CUDART static linking)

	Detected 1 CUDA Capable device(s)

	Device 0: "Quadro 4000"
	  CUDA Driver Version / Runtime Version          8.0 / 8.0
	  CUDA Capability Major/Minor version number:    2.0
	  Total amount of global memory:                 1977 MBytes (2073296896 bytes)
	  ( 8) Multiprocessors, ( 32) CUDA Cores/MP:     256 CUDA Cores
	  GPU Max Clock rate:                            950 MHz (0.95 GHz)
	  Memory Clock rate:                             1404 Mhz
	  Memory Bus Width:                              256-bit
	  L2 Cache Size:                                 524288 bytes
	  Maximum Texture Dimension Size (x,y,z)         1D=(65536), 2D=(65536, 65535), 3D=(2048, 2048, 2048)
	  Maximum Layered 1D Texture Size, (num) layers  1D=(16384), 2048 layers
	  Maximum Layered 2D Texture Size, (num) layers  2D=(16384, 16384), 2048 layers
	  Total amount of constant memory:               65536 bytes
	  Total amount of shared memory per block:       49152 bytes
	  Total number of registers available per block: 32768
	  Warp size:                                     32
	  Maximum number of threads per multiprocessor:  1536
	  Maximum number of threads per block:           1024
	  Max dimension size of a thread block (x,y,z): (1024, 1024, 64)
	  Max dimension size of a grid size    (x,y,z): (65535, 65535, 65535)
	  Maximum memory pitch:                          2147483647 bytes
	  Texture alignment:                             512 bytes
	  Concurrent copy and kernel execution:          Yes with 2 copy engine(s)
	  Run time limit on kernels:                     Yes
	  Integrated GPU sharing Host Memory:            No
	  Support host page-locked memory mapping:       Yes
	  Alignment requirement for Surfaces:            Yes
	  Device has ECC support:                        Disabled
	  Device supports Unified Addressing (UVA):      Yes
	  Device PCI Domain ID / Bus ID / location ID:   0 / 5 / 0
	  Compute Mode:
	     < Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) >

	deviceQuery, CUDA Driver = CUDART, CUDA Driver Version = 8.0, CUDA Runtime Version = 8.0, NumDevs = 1, Device0 = Quadro 4000
	Result = PASS



[02/04/17] 
m2s --x86-sim detailed \
		--x86-report tungconfigs/testcase2/results/pipeline_test2_mcpat_020417.out \
		--mem-report tungconfigs/testcase2/results/mem_test2_mcpat_020417.out \
		--x86-config ./tungconfigs/testcase2/configs/x86_cpuconfig \
		--si-sim detailed \
		--si-config ./tungconfigs/testcase2/configs/sigpuconfig \
		--mem-config ./tungconfigs/testcase2/configs/memconfig \
		--net-config ./tungconfigs/testcase2/configs/netconfig \
		--x86-max-inst 100000000 \
		--net-report net_test2_mm_mult_serial8_mcpat_020417.out \
		mm_multi_serial 8


		--------
		[error#1]
			[ELF Reader]
			[/home/tungle/Documents/multi2sim-5.0/benchmarks/rodinia3.1/rodinia_3.1/cuda/bfs
			/bfs] Error: 64-bit ELF files not supported
			The ELF file being loaded is a 64-bit file, currently not supported by
			Multi2Sim. If you are compiling your own source code on a 64-bit machine, please
			use the '-m32' flag in the gcc command-line. If you get compilation errors
			related with missing '.h' files, check that the 32-bit gcc package associated
			with your Linux distribution is installed.




[02/03/17] Tested and working 

		m2s --x86-sim detailed \
		--x86-report tungconfigs/testcase2/pipeline_test2_mcpat.out \
		--mem-report tungconfigs/testcase2/mem_test2_mcpat.out \
		--x86-config ./tungconfigs/testcase2/x86_cpuconfig \
		--si-sim detailed \
		--si-config ./tungconfigs/testcase2/sigpuconfig \
		--mem-config ./tungconfigs/testcase2/memconfig \
		--net-config ./tungconfigs/testcase2/netconfig \
		--net-report net_test2_mcpat.out \
		mm_multi_serial 8


		------------------------------------
		In XML file [fixed]
		Error#1: some value(s) of number_of_cores/number_of_L2s/number_of_L3s/number_of_NoCs is/are not correct!
			infile: mcpat_testcase1.xml
				deleted	system.mem module.
			outfile: 
				mcpat_tungtext.txt
